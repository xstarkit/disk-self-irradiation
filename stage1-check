#!/usr/bin/perl
use File::Basename;
use File::Path;
use Cwd 'abs_path';
use File::Slurp;
use List::Util qw[min max];

if ($#ARGV != 0) { die("stage1-check: dir"); }

my $base_dir  = $ARGV[0];

my @dirs = grep { -d } glob "$base_dir/????";


open(output, ">", "stage1-check.dat") or die $!;
print(output "# checking $base_dir\n");
print(output "# format:  id | radius | T(sd) | T(tl) | H(sd) | H(tl)\n");
print(output "# gnuplot: plot 'stage1-check.dat' u 1:(\$3/1e6) w l, '' u 1:(\$4/1e6) w p lw 2 lc 3, '' u 1:5 w l, '' u 1:6 w l\n");

foreach $dir (@dirs) {
    my $id = trim(read_file("$dir/param-id"));
    my $R  = trim(read_file("$dir/param-R")); 
    my $T  = trim(read_file("$dir/param-T")); 
    my $H  = trim(read_file("$dir/param-H")); 

    my @mod15 = read_file("$dir/stage1/fort.15");
    my $tlH = trim($mod15[11])/1.476716e+06;
    my $tlF = 0.0;
    foreach my $n (12..$#mod15-1) {
        (my $f0, my $Iv0) = split(/\s+/, trim($mod15[$n]));
        (my $f1, my $Iv1) = split(/\s+/, trim($mod15[$n+1]));
        $tlF += exp(0.5*(log($Iv0+1e-200)+log($Iv1+1e-200)) + 0.5*(log($f1)+log($f0))) * abs(log($f1)-log($f0))
    }
    my $tlT = sqrt(sqrt($tlF/5.670400e-05));

    #my @mod9 = read_file("$dir/stage1/fort.9");
    #my $n = $#mod9-1;
    #my $last_iter = $1 if ($mod9[$n] =~ m/^\s+(\d+)\s/);
    #my $max_change = 1e-99;
    #while ($mod9[$n] =~ m/\s+$last_iter\s+.*?\s+.*?\s+.*?\s+.*?\s+(.*?)\s+/i) {
    #    my $tmp = $1;
    #    $tmp =~ s/d/e/i;
    #    $max_change = max($max_change, abs($tmp));
    #    $n--;
    #}
    #print "$dir - $max_change\n";

    printf(output "%04d  %6.2f  %.4e  %.4e  %.4e  %.4e\n", $id,  $R,  $T,  $tlT,  $H,  $tlH);
}
close(output);


sub trim {
    return $_[0] =~ s/^\s+|\s+$//rg;
}


